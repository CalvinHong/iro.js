{"version":3,"file":"iro.min.js","sources":["../src/util/dom.js","../src/ui/component.js","../src/ui/marker.js","../src/ui/wheel.js","../src/modules/color.js","../src/ui/slider.js","../src/util/svg.js","../src/modules/stylesheet.js","../src/modules/colorPicker.js","../src/iro.js"],"sourcesContent":["const EVENT_READYSTATE_CHANGE = \"readystatechange\";\nconst READYSTATE_COMPLETE = \"complete\";\n\n/**\n  * @desc listen to one or more events on an element\n  * @param {Element} el target element\n  * @param {Array} eventList the events to listen to\n  * @param {Function} callback the event callback function\n  * @param {Object} params params to pass to addEventListener\n*/\nexport function listen(el, eventList, callback, params={}) {\n  for (var i = 0; i < eventList.length; i++) {\n    el.addEventListener(eventList[i], callback, params);\n  }\n};\n\n/**\n* @desc remove an event listener on an element\n* @param {Element} el target element\n* @param {Array} eventList the events to remove\n* @param {Function} callback the event callback function\n*/\nexport function unlisten(el, eventList, callback) {\n  for (var i = 0; i < eventList.length; i++) {\n    el.removeEventListener(eventList[i], callback);\n  }\n};\n\n/**\n* @desc call fn callback when the page document is ready\n* @param {Function} callback callback function to be called\n*/\nexport function whenReady(callback) {\n  var _this = this;\n  if (document.readyState == READYSTATE_COMPLETE) {\n    callback();\n  }\n  else {\n    listen(document, [EVENT_READYSTATE_CHANGE], function stateChange(e) {\n      if (document.readyState == READYSTATE_COMPLETE) {\n        callback();\n        unlisten(document, [EVENT_READYSTATE_CHANGE], stateChange);\n      }\n    });\n  }\n};","import { listen, unlisten } from \"util/dom\";\n\nconst EVENT_MOUSEDOWN = \"mousedown\",\n      EVENT_MOUSEMOVE = \"mousemove\",\n      EVENT_MOUSEUP = \"mouseup\",\n      EVENT_TOUCHSTART = \"touchstart\",\n      EVENT_TOUCHMOVE = \"touchmove\",\n      EVENT_TOUCHEND = \"touchend\";\n\nexport default class component {\n\n  constructor(parent, attrs) {\n    this.parent = parent;\n    this.root = parent.svg.svg(attrs);\n    listen(this.root.el, [EVENT_MOUSEDOWN, EVENT_TOUCHSTART], this, { passive:false });\n  }\n\n  handleEvent(e) {\n    const { parent, root } = this;\n    // Detect if the event is a touch event by checking if it has the `touches` property\n    // If it is a touch event, use the first touch input\n    e.preventDefault();\n    var point = e.touches ? e.changedTouches[0] : e;\n    var x = point.clientX;\n    var y = point.clientY;\n    // Get the screen position of the component\n    var rect = root.el.getBoundingClientRect();\n\n    var hsv;  \n    switch (e.type) {\n      case EVENT_MOUSEDOWN:\n      case EVENT_TOUCHSTART:\n        listen(document, [EVENT_MOUSEMOVE, EVENT_TOUCHMOVE, EVENT_MOUSEUP, EVENT_TOUCHEND], this, { passive:false });\n        hsv = this.input(x, y, rect, \"START\");\n        parent.emit(\"input:start\", parent.color);\n        break;\n      case EVENT_MOUSEMOVE:\n      case EVENT_TOUCHMOVE:\n        // Use the position to update the picker color\n        hsv = this.input(x, y, rect, \"MOVE\");\n        break;\n      case EVENT_MOUSEUP:\n      case EVENT_TOUCHEND:\n        hsv = this.input(x, y, rect, \"END\");\n        parent.emit(\"input:end\", parent.color);\n        unlisten(document, [EVENT_MOUSEMOVE, EVENT_TOUCHMOVE, EVENT_MOUSEUP, EVENT_TOUCHEND], this);\n        break;\n    }\n    if (hsv) parent.color.hsv = hsv;\n  }\n\n  input(x, y, rect, type) {\n\n  }\n\n}","// css class prefix for this element\nvar CLASS_PREFIX = \"iro__marker\";\n\nexport default class marker {\n   /**\n    * @constructor marker UI\n    * @param {svgRoot} svg - svgRoot object\n    * @param {Object} opts - options\n  */\n  constructor(svg, opts) {\n    var baseGroup = svg.svg({\n      class: CLASS_PREFIX\n    });\n    baseGroup.circle(0, 0, opts.r, {\n      class: CLASS_PREFIX + \"__outer\",\n      fill: \"none\",\n      strokeWidth: 5,\n      stroke: \"#000\",\n      \"vector-effect\": \"non-scaling-stroke\",\n    });\n    baseGroup.circle(0, 0, opts.r, {\n      class: CLASS_PREFIX + \"__inner\",\n      fill: \"none\",\n      strokeWidth: 2,\n      stroke: \"#fff\",\n      \"vector-effect\": \"non-scaling-stroke\",\n    });\n    this.g = baseGroup;\n  }\n\n  /**\n    * @desc move marker to centerpoint (x, y) and redraw\n    * @param {Number} x - point x coordinate\n    * @param {Number} y - point y coordinate\n  */\n  move(x, y) {\n    this.g.setAttrs({x, y});\n    // this.g.setTransform(\"translate\", [x, y]);\n  }\n}","import component from \"ui/component\";\nimport marker from \"ui/marker\";\n\n// css class prefix for this element\nvar CLASS_PREFIX = \"iro__wheel\";\n// Quick references to reused math functions\nvar PI = Math.PI,\n    sqrt = Math.sqrt,\n    abs = Math.abs,\n    round = Math.round;\n\nexport default class wheel extends component {\n  /**\n    * @constructor hue wheel UI\n    * @param {svgRoot} svg - svgRoot object\n    * @param {Object} opts - options\n  */\n  constructor(parent, opts) {\n    super(parent, {\n      class: CLASS_PREFIX,\n      x: opts.x,\n      y: opts.y,\n    });\n    this._opts = opts;\n    this.type = \"wheel\";\n\n    var r = opts.r;\n    var border = opts.border;\n    var borderWidth = border.w;\n    var cY = borderWidth + r;\n    var cX = borderWidth + r;\n    var baseGroup = this.root;\n\n    this.cX = cX;\n    this.cY = cY;\n\n    baseGroup.circle(cX, cY, r + border.w / 2, {\n      class: CLASS_PREFIX + \"__border\",\n      fill: \"#fff\",\n      stroke: border.color,\n      strokeWidth: border.w,\n      \"vector-effect\": \"non-scaling-stroke\",\n    });\n\n    var ringGroup = baseGroup.g({\n      class: CLASS_PREFIX + \"__hue\",\n      strokeWidth: r,\n      fill: \"none\",\n    });\n\n    for (var hue = 0; hue < 360; hue++) {\n      ringGroup.arc(cX, cY, r / 2, hue, hue + 1.5, {\n        stroke: \"hsl(\" + (opts.anticlockwise ? 360 - hue : hue) + \",100%,50%)\",\n      });\n    }\n\n    var saturation = baseGroup.circle(cX, cY, r, {\n      class: CLASS_PREFIX + \"__saturation\"\n    });\n\n    saturation.setGradient(\"fill\", parent.svg.gradient(\"radial\", {\n      0: {\n        color: \"#fff\"\n      },\n      100: {\n        color:\"#fff\", \n        opacity: 0\n      },\n    }));\n\n    this._lightness = baseGroup.circle(cX, cY, r, {\n      class: CLASS_PREFIX + \"__lightness\",\n      opacity: 0\n    });\n\n    this.marker = new marker(baseGroup, opts.marker);\n  }\n  /**\n    * @desc updates this element to represent a new color value\n    * @param {Object} color - an iroColor object with the new color value\n    * @param {Object} changes - an object that gives a boolean for each HSV channel, indicating whether ot not that channel has changed\n  */\n  update(color, changes) {\n    var opts = this._opts;\n    var hsv = color.hsv;\n    // If the V channel has changed, redraw the wheel UI with the new value\n    if (changes.v && opts.lightness) {\n      this._lightness.setAttrs({opacity: (1 - hsv.v / 100).toFixed(2) });\n    }\n    // If the H or S channel has changed, move the marker to the right position\n    if (changes.h || changes.s) {\n      // convert the hue value to radians, since we'll use it as an angle\n      var hueAngle = (opts.anticlockwise ? 360 - hsv.h : hsv.h) * (PI / 180);\n      // convert the saturation value to a distance between the center of the ring and the edge\n      var dist = (hsv.s / 100) * opts.rMax;\n      // Move the marker based on the angle and distance\n      this.marker.move(this.cX + dist * Math.cos(hueAngle), this.cY + dist * Math.sin(hueAngle));\n    }\n  }\n\n  /**\n    * @desc Takes a point at (x, y) and returns HSV values based on this input -- use this to update a color from mouse input\n    * @param {Number} x - point x coordinate\n    * @param {Number} y - point y coordinate\n    * @return {Object} - new HSV color values (some channels may be missing)\n  */\n  input(x, y, rect, type) {\n    var opts = this._opts;\n    var rangeMax = opts.rMax;\n    var cX = rect.width / 2;\n    var cY = rect.height / 2;\n\n    console.log(rect)\n\n    x = cX - (x - rect.left);\n    y = cY - (y - rect.top);\n\n    var angle = Math.atan2(y, x),\n        // Calculate the hue by converting the angle to radians\n        hue = round(angle * (180 / PI)) + 180,\n        // Find the point's distance from the center of the wheel\n        // This is used to show the saturation level\n        dist = Math.min(sqrt(x * x + y * y), rangeMax);\n    \n    hue = (opts.anticlockwise ? 360 - hue : hue);\n\n    // Return just the H and S channels, the wheel element doesn't do anything with the L channel\n    return {\n      h: hue,\n      s: round((100 / rangeMax) * dist)\n    };\n  }\n\n  // /**\n  //   * @desc Check if a point at (x, y) is inside this element\n  //   * @param {Number} x - point x coordinate\n  //   * @param {Number} y - point y coordinate\n  //   * @return {Boolean} - true if the point is a \"hit\", else false\n  // */\n  // checkHit(x, y) {\n  //   var opts = this._opts;\n\n  //   // Check if the point is within the hue ring by comparing the point's distance from the centre to the ring's radius\n  //   // If the distance is smaller than the radius, then we have a hit\n  //   var dx = abs(x - opts.cX),\n  //       dy = abs(y - opts.cY);\n  //   return sqrt(dx * dx + dy * dy) < opts.r;\n  // }\n}","var round = Math.round;\nvar floor = Math.floor;\n\n/**\n  * @desc generic parser for hsl / rgb / etc string\n  * @param {String} str - color string\n  * @param {Array} maxValues - max values for each channel (used for calculating percent-based values)\n  * @return {Array} type (rgb | rgba | hsl | hsla) values for each channel\n*/\nfunction parseColorStr(str, maxValues) {\n  var parsed = str.match(/(\\S+)\\((\\d+)(%?)(?:\\D+?)(\\d+)(%?)(?:\\D+?)(\\d+)(%?)(?:\\D+?)?([0-9\\.]+?)?\\)/i),\n      val1 = parseInt(parsed[2]),\n      val2 = parseInt(parsed[4]),\n      val3 = parseInt(parsed[6]);\n  return [\n    parsed[1],\n    parsed[3] == \"%\" ? val1 / 100 * maxValues[0] : val1,\n    parsed[5] == \"%\" ? val2 / 100 * maxValues[1] : val2,\n    parsed[7] == \"%\" ? val3 / 100 * maxValues[2] : val3,\n    parseFloat(parsed[8]) || undefined\n  ];\n};\n\n/**\n  * @desc convert object / string input to color if necessary\n  * @param {Object | String | color} value - color instance, object (hsv, hsl or rgb), string (hsl, rgb, hex)\n  * @return {color} color instance\n*/\nfunction getColor(value) {\n  return value instanceof color ? value : new color(value);\n};\n\n/**\n  * @desc clamp value between min and max\n  * @param {Number} value\n  * @param {Number} min\n  * @param {Number} max\n  * @return {Number}\n*/\nfunction clamp(value, min, max) {\n  return value <= min ? min : value >= max ? max : value;\n};\n\n/**\n  * @desc compare values between two objects, returns a object representing changes with true/false values\n  * @param {Object} a\n  * @param {Object} b\n  * @return {Object}\n*/\nfunction compareObjs(a, b) {\n  var changes = {};\n  for (var key in a) changes[key] = b[key] != a[key];\n  return changes;\n};\n\nexport default class color {\n  /**\n    * @constructor color object\n    * @param {Object | String | color} value - color instance, object (hsv, hsl or rgb), string (hsl, rgb, hex)\n  */\n  constructor(value) {\n    // The watch callback function for this color will be stored here\n    this._onChange = false;\n    // The default color value\n    this._value = {h: undefined, s: undefined, v: undefined};\n    if (value) this.set(value);\n  }\n\n  /**\n    * @desc mix two colors\n    * @param {Object | String | color} color1 - color instance, object (hsv, hsl or rgb), string (hsl, rgb, hex)\n    * @param {Object | String | color} color2 - color instance, object (hsv, hsl or rgb), string (hsl, rgb, hex)\n    * @param {Number} weight - closer to 0 = more color1, closer to 100 = more color2\n    * @return {color} color instance\n  */\n  static mix(color1, color2, weight) {\n    var rgb1 = getColor(color1).rgb,\n        rgb2 = getColor(color2).rgb;\n    weight = clamp((weight / 100 || 0.5), 0, 1);\n    return new color({\n      r: floor(rgb1.r + (rgb2.r - rgb1.r) * weight),\n      g: floor(rgb1.g + (rgb2.g - rgb1.g) * weight),\n      b: floor(rgb1.b + (rgb2.b - rgb1.b) * weight),\n    });\n  }\n\n  /**\n    * @desc lighten color by amount\n    * @param {Object | String | color} color - color instance, object (hsv, hsl or rgb), string (hsl, rgb, hex)\n    * @param {Number} amount\n    * @return {color} color instance\n  */\n  static lighten(color, amount) {\n    var col = getColor(color),\n        hsv = col.hsv;\n    hsv.v = clamp(hsv.v + amount, 0, 100);\n    col.hsv = hsv;\n    return col;\n  }\n\n  /**\n    * @desc darken color by amount\n    * @param {Object | String | color} color - color instance, object (hsv, hsl or rgb), string (hsl, rgb, hex)\n    * @param {Number} amount\n    * @return {color} color instance\n  */\n  static darken(color, amount) {\n    var col = getColor(color),\n        hsv = col.hsv;\n    hsv.v = clamp(hsv.v - amount, 0, 100);\n    col.hsv = hsv;\n    return col;\n  }\n\n  /**\n    * @desc convert hsv object to rgb\n    * @param {Object} hsv - hsv object\n    * @return {Object} rgb object\n  */\n  static hsv2Rgb(hsv) {\n    var r, g, b, i, f, p, q, t;\n    var h = hsv.h/360, s = hsv.s/100, v = hsv.v/100;\n    i = floor(h * 6);\n    f = h * 6 - i;\n    p = v * (1 - s);\n    q = v * (1 - f * s);\n    t = v * (1 - (1 - f) * s);\n    switch (i % 6) {\n      case 0: r = v, g = t, b = p; break;\n      case 1: r = q, g = v, b = p; break;\n      case 2: r = p, g = v, b = t; break;\n      case 3: r = p, g = q, b = v; break;\n      case 4: r = t, g = p, b = v; break;\n      case 5: r = v, g = p, b = q; break;\n    }\n    return {r: round(r * 255), g: round(g * 255), b: round(b * 255)};\n  }\n\n  /**\n    * @desc convert rgb object to hsv\n    * @param {Object} rgb - rgb object\n    * @return {Object} hsv object\n  */\n  static rgb2Hsv(rgb) {\n    // Modified from https://github.com/bgrins/TinyColor/blob/master/tinycolor.js#L446\n    var r = rgb.r / 255,\n        g = rgb.g / 255,\n        b = rgb.b / 255,\n        max = Math.max(r, g, b),\n        min = Math.min(r, g, b),\n        delta = max - min,\n        hue;\n    switch (max) {\n      case min: hue = 0; break;\n      case r: hue = (g - b) / delta + (g < b ? 6 : 0); break;\n      case g: hue = (b - r) / delta + 2; break;\n      case b: hue = (r - g) / delta + 4; break;\n    }\n    hue /= 6;\n    return {\n      h: hue * 360,\n      s: max == 0 ? 0 : (delta / max) * 100,\n      v: max * 100\n    };\n  }\n\n  /**\n    * @desc convert hsv object to hsl\n    * @param {Object} hsv - hsv object\n    * @return {Object} hsl object\n  */\n  static hsv2Hsl(hsv) {\n    var s = hsv.s / 100,\n        v = hsv.v / 100;\n    var l = 0.5 * v * (2 - s);\n    s = v * s / (1 - Math.abs(2 * l - 1));\n    return {\n      h: hsv.h,\n      s: s * 100 || 0,\n      l: l * 100\n    };\n  }\n\n  /**\n    * @desc convert hsl object to hsv\n    * @param {Object} hsl - hsl object\n    * @return {Object} hsv object\n  */\n  static hsl2Hsv(hsl) {\n    var s = hsl.s / 100,\n    l = hsl.l / 100;\n    l *= 2;\n    s *= (l <= 1) ? l : 2 - l;\n    return {\n      h: hsl.h,\n      s: ((2 * s) / (l + s)) * 100,\n      v: ((l + s) / 2) * 100\n    };\n  }\n\n  /**\n    * @desc convert hsl object to string\n    * @param {Object} hsl - hsl object\n    * @return {Object} hsl string\n  */\n  static hsl2Str(hsl) {\n    return \"hsl\" + (hsl.a ? \"a\" : \"\") + \"(\" + hsl.h + \", \" + hsl.s + \"%, \" + hsl.l + \"%\" + (hsl.a ? \", \" + hsl.a : \"\") + \")\";\n  }\n\n  /**\n    * @desc convert rgb object to string\n    * @param {Object} rgb - rgb object\n    * @return {Object} rgb string\n  */\n  static rgb2Str(rgb) {\n    return \"rgb\" + (rgb.a ? \"a\" : \"\") + \"(\" + rgb.r + \", \" + rgb.g + \", \" + rgb.b + (rgb.a ? \", \" + rgb.a : \"\") + \")\";\n  }\n\n  /**\n    * @desc convert rgb object to hex string\n    * @param {Object} rgb - rgb object\n    * @return {Object} hex string\n  */\n  static rgb2Hex(rgb) {\n    var str = \"#\";\n    str += rgb.r.toString(16).padStart(2, \"0\");\n    str += rgb.g.toString(16).padStart(2, \"0\");\n    str += rgb.b.toString(16).padStart(2, \"0\");\n    return str;\n  }\n\n  /**\n    * @desc parse hex string\n    * @param {String} str - color string\n    * @return {Object} rgb object\n  */\n  static parseHexStr(hex) {\n    // Strip any \"#\" characters\n    hex = hex.replace(\"#\", \"\");\n    // Prefix the hex string with \"0x\" which indicates a number in hex notation, then convert to an integer\n    var int = parseInt(\"0x\" + hex),\n        // If the length of the input is only 3, then it is a shorthand hex color\n        isShorthand = hex.length == 3,\n        // bitMask for isolating each channel\n        bitMask = isShorthand ? 0xF : 0xFF,\n        // bitLength of each channel (for example, F is 4 bits long while FF is 8 bits long)\n        bitLength = isShorthand ? 4 : 8,\n        // If we're using shorthand notation, multiply each channel by 17\n        multiplier = isShorthand ? 17 : 1;\n    return {\n      r: ((int >> (bitLength * 2)) & bitMask) * multiplier,\n      g: ((int >> bitLength) & bitMask) * multiplier,\n      b: (int & bitMask) * multiplier,\n    };\n  }\n\n  /**\n    * @desc parse hsl string\n    * @param {String} str - color string\n    * @return {Object} hsl object\n  */\n  static parseHslStr(str) {\n    var parsed = parseColorStr(str, [360, 100, 100]);\n    return {\n      h: parsed[2],\n      s: parsed[3],\n      l: parsed[4]\n    };\n  }\n\n  /**\n    * @desc parse rgb string\n    * @param {String} str - color string\n    * @return {Object} rgb object\n  */\n  static parseRgbStr(str) {\n    var parsed = parseColorStr(str, [255, 255, 255]);\n    return {\n      r: parsed[1],\n      g: parsed[2],\n      b: parsed[3]\n    };\n  }\n\n  get hsv() {\n    // _value is cloned to allow changes to be made to the values before passing them back\n    var v = this._value;\n    return {h: v.h, s: v.s, v: v.v};\n  }\n\n  set hsv(newValue) {\n    // If this color is being watched for changes we need to compare the new and old values to check the difference\n    // Otherwise we can just be lazy\n    if (this._onChange) {\n      var oldValue = this._value;\n      for (var channel in oldValue) {\n        if (!newValue.hasOwnProperty(channel)) newValue[channel] = oldValue[channel];\n      }\n      var changes = compareObjs(oldValue, newValue);\n      // Update the old value\n      this._value = newValue;\n      // If the value has changed, call hook callback\n      if (changes.h || changes.s || changes.v) this._onChange(this, changes);\n    } else {\n      this._value = newValue;\n    }\n  }\n\n  get rgb() {\n    var rgb = color.hsv2Rgb(this._value);\n    return {\n      r: round(rgb.r),\n      g: round(rgb.g),\n      b: round(rgb.b),\n    };\n  }\n\n  set rgb(value) {\n    this.hsv = color.rgb2Hsv(value);\n  }\n\n  get hsl() {\n    var hsl = color.hsv2Hsl(this._value);\n    return {\n      h: round(hsl.h),\n      s: round(hsl.s),\n      l: round(hsl.l),\n    };\n  }\n\n  set hsl(value) {\n    this.hsv = color.hsl2Hsv(value);\n  }\n\n  get rgbString() {\n    return color.rgb2Str(this.rgb);\n  }\n\n  set rgbString(value) {\n    this.rgb = color.parseRgbStr(value);\n  }\n\n  get hexString() {\n    return color.rgb2Hex(this.rgb);\n  }\n\n  set hexString(value) {\n    this.rgb = color.parseHexStr(value);\n  }\n\n  get hslString() {\n    return color.hsl2Str(this.hsl);\n  }\n\n  set hslString(value) {\n    this.hsl = color.parseHslStr(value);\n  }\n\n  /**\n    * @desc set the color from any valid value\n    * @param {Object | String | color} value - color instance, object (hsv, hsl or rgb), string (hsl, rgb, hex)\n  */\n  set(value) {\n    if (typeof value == \"object\") {\n      if (value instanceof color) {\n        this.hsv = color.hsv;\n      } else if (\"r\" in value) {\n        this.rgb = value;\n      } else if (\"v\" in value) {\n        this.hsv = value;\n      } else if (\"l\" in value) {\n        this.hsl = value;\n      }\n    } else if (typeof value == \"string\") {\n      if (/^rgb/.test(value)) {\n        this.rgbString = value;\n      } else if (/^hsl/.test(value)) {\n        this.hslString = value;\n      } else if (/^#[0-9A-Fa-f]/.test(value)) {\n        this.hexString = value;\n      }\n    }\n  }\n\n  /**\n    * @desc shortcut to set a specific channel value\n    * @param {String} model - hsv | hsl | rgb\n    * @param {String} channel - individual channel to set, for example if model = hsl, chanel = h | s | l\n    * @param {Number} value - new value for the channel\n  */\n  setChannel(model, channel, value) {\n    var v = this[model];\n    v[channel] = value;\n    this[model] = v;\n  }\n\n  /**\n    * @desc make new color instance with the same value as this one\n    * @return {color}\n  */\n  clone() {\n    return new color(this);\n  }\n\n  /**\n    * @desc compare this color against another, returns a object representing changes with true/false values\n    * @param {Object | String | color} color - color to compare against\n    * @param {String} model - hsv | hsl | rgb\n    * @return {Object}\n  */\n  compare(color, model) {\n    model = model || \"hsv\";\n    return compareObjs(this[model], getColor(color)[model]);\n  }\n\n  /**\n    * @desc mix a color into this one\n    * @param {Object | String | color} color - color instance, object (hsv, hsl or rgb), string (hsl, rgb, hex)\n    * @param {Number} weight - closer to 0 = more current color, closer to 100 = more new color\n  */\n  mix(color, weight) {\n    this.hsv = mix(this, color, weight).hsv;\n  }\n\n  /**\n    * @desc lighten color by amount\n    * @param {Number} amount\n  */\n  lighten(amount) {\n    lighten(this, amount);\n  }\n\n  /**\n    * @desc darken color by amount\n    * @param {Number} amount\n  */\n  darken(amount) {\n    darken(this, amount);\n  }\n}","import component from \"ui/component\";\nimport marker from \"ui/marker\";\nimport iroColor from \"modules/color\";\n\n// css class prefix for this element\nvar CLASS_PREFIX = \"iro__slider\";\n\nexport default class slider extends component {\n  /**\n    * @constructor slider UI\n    * @param {svgRoot} svg - svgRoot object\n    * @param {Object} opts - options\n  */\n  constructor(parent, opts) {\n    super(parent, {\n      class: CLASS_PREFIX,\n      x: opts.x,\n      y: opts.y\n    });\n    var r = opts.r,\n    w = opts.w,\n    h = opts.h,\n    borderWidth = opts.border.w;\n\n    var baseGroup = this.root;\n  \n    // \"range\" limits how far the slider's marker can travel, and where it stops and starts along the X axis\n    opts.range = {\n      min: r,\n      max: w - r,\n      w: w - (r * 2)\n    };\n  \n    opts.sliderType = opts.sliderType || \"v\";\n  \n    this.type = \"slider\";\n    this._opts = opts;\n  \n    var radius = r + borderWidth / 2;\n  \n    var rect = baseGroup.insert(\"rect\", {\n      class: CLASS_PREFIX + \"__value\",\n      rx: radius,\n      ry: radius,\n      x: -borderWidth / 2,\n      y: -borderWidth / 2,\n      width: w + borderWidth,\n      height: h + borderWidth,\n      strokeWidth: borderWidth,\n      stroke: opts.border.color,\n      \"vector-effect\": \"non-scaling-stroke\",\n    });\n  \n    rect.setGradient(\"fill\", parent.svg.gradient(\"linear\", {\n      0: {color: \"#000\"},\n      100: {color: \"#fff\"}\n    }));\n  \n    this._gradient = rect.gradient;\n  \n    this.marker = new marker(baseGroup, opts.marker);\n  }\n  /**\n    * @desc updates this element to represent a new color value\n    * @param {Object} color - an iroColor object with the new color value\n    * @param {Object} changes - an object that gives a boolean for each HSV channel, indicating whether ot not that channel has changed\n  */\n  update(color, changes) {\n    var opts = this._opts;\n    var range = opts.range;\n    var hsv = color.hsv;\n    var hsl = iroColor.hsv2Hsl({h: hsv.h, s: hsv.s, v: 100});\n    if (opts.sliderType == \"v\") {\n      if (changes.h || changes.s) {\n        this._gradient.stops[1].setAttrs({stopColor: \"hsl(\" + hsl.h + \",\" + hsl.s + \"%,\" + hsl.l + \"%)\"});\n      }\n      if (changes.v) {\n        var percent = (hsv.v / 100);\n        this.marker.move(range.min + (percent * range.w), (opts.h / 2));\n      }\n    }\n  }\n\n  /**\n    * @desc Takes a point at (x, y) and returns HSV values based on this input -- use this to update a color from mouse input\n    * @param {Number} x - point x coordinate\n    * @param {Number} y - point y coordinate\n    * @return {Object} - new HSV color values (some channels may be missing)\n  */\n  input(x, y, rect, type) {\n    x = x - rect.left;\n    y = y - rect.top;\n    var opts = this._opts;\n    var range = opts.range;\n    var dist = Math.max(Math.min(x, range.max), range.min) - range.min;\n    return {\n      v: Math.round((100 / range.w) * dist),\n    };\n  }\n\n  // /**\n  //   * @desc Check if a point at (x, y) is inside this element\n  //   * @param {Number} x - point x coordinate\n  //   * @param {Number} y - point y coordinate\n  //   * @return {Boolean} - true if the point is a \"hit\", else false\n  // */\n  // checkHit(x, y) {\n  //   var opts = this._opts;\n  //   return (x > opts.x) && (x < opts.x + opts.w) && (y > opts.y) && (y < opts.y + opts.h);\n  // }\n\n}","var GRADIENT_INDEX = 0;\nvar GRADIENT_SUFFIX = \"Gradient\";\nvar SVG_NAMESPACE = \"http://www.w3.org/2000/svg\";\nvar SVG_ATTRIBUTE_SHORTHANDS = {\n  class: \"class\",\n  stroke: \"stroke\",\n  strokeWidth: \"stroke-width\",\n  fill: \"fill\",\n  opacity: \"opacity\",\n  offset: \"offset\",\n  stopColor: \"stop-color\",\n  stopOpacity: \"stop-opacity\",\n};\n// TODO: figure out why these aren't being compressed properly?\n// var SVG_TRANSFORM_SHORTHANDS = {\n//   translate: \"setTranslate\",\n//   scale: \"setScale\",\n//   rotate: \"setRotate\"\n// };\n// sniff useragent string to check if the user is running IE, Edge or Safari\nvar ua = window.navigator.userAgent.toLowerCase();\nvar IS_IE = /msie|trident|edge/.test(ua);\nvar IS_SAFARI = /^((?!chrome|android).)*safari/i.test(ua);\n\nclass svgElement {\n  /**\n    * @constructor svg element wrapper\n    * @param {svgRoot} root - svgRoot object\n    * @param {svgElement | Element} parent - parent node \n    * @param {String} type - element tag name\n    * @param {Object} attrs - element attributes\n  */\n  constructor(root, parent, type, attrs) {\n    var el = document.createElementNS(SVG_NAMESPACE, type);\n    this.el = el;\n    this.setAttrs(attrs);\n    (parent.el || parent).appendChild(el);\n    this._root = root;\n    // this._svgTransforms = {};\n    // this._transformList = el.transform ? el.transform.baseVal : false;\n  }\n\n  /**\n    * @desc insert a new svgElement\n    * @param {String} type - element tag name\n    * @param {Object} attrs - element attributes\n  */\n  insert(type, attrs) {\n    return new svgElement(this._root, this, type, attrs);\n  }\n\n  /**\n    * @desc shorthand to insert a new group svgElement\n    * @param {Object} attrs - element attributes\n  */\n  g(attrs) {\n    return this.insert(\"g\", attrs);\n  }\n\n  svg(attrs) {\n    return this.insert(\"svg\", {\n      ...attrs,\n      overflow: \"visible\",\n    });\n  }\n\n  /**\n    * @desc shorthand to insert a new arc svgElement\n    * @param {Number} cx - arc center x\n    * @param {Number} cy - arc center y\n    * @param {Number} radius - arc radius\n    * @param {Number} startAngle - arc start angle (in degrees)\n    * @param {Number} endAngle - arc end angle (in degrees)\n    * @param {Object} attrs - element attributes\n  */\n  arc(cx, cy, radius, startAngle, endAngle, attrs) {\n    var largeArcFlag = endAngle - startAngle <= 180 ? 0 : 1;\n    startAngle *= Math.PI / 180;\n    endAngle *= Math.PI / 180;\n    var x1 = cx + radius * Math.cos(endAngle),\n        y1 = cy + radius * Math.sin(endAngle),\n        x2 = cx + radius * Math.cos(startAngle),\n        y2 = cy + radius * Math.sin(startAngle);\n    attrs = attrs || {};\n    attrs.d = [\"M\", x1, y1, \"A\", radius, radius, 0, largeArcFlag, 0, x2, y2].join(\" \");\n    return this.insert(\"path\", attrs);\n  }\n\n  /**\n    * @desc shorthand to insert a new circle svgElement\n    * @param {Number} cx - circle center x\n    * @param {Number} cy - circle center y\n    * @param {Number} radius - circle radius\n    * @param {Object} attrs - element attributes\n  */\n  circle(cx, cy, radius, attrs) {\n    attrs = attrs || {};\n    attrs.cx = cx;\n    attrs.cy = cy;\n    attrs.r = radius;\n    return this.insert(\"circle\", attrs);\n  }\n\n  // /**\n  //   * @desc set a rotate/translate/scale transform on this element\n  //   * @param {String} type - transform (rotate | translate | scale)\n  //   * @param {Array} args - transform values\n  // */\n  // setTransform(type, args) {\n  //   if (!IS_IE) {  \n  //     var transform, transformFn;\n  //     var svgTransforms = this._svgTransforms;\n  //     if (!svgTransforms[type]) {\n  //       transform = this._root.el.createSVGTransform();\n  //       svgTransforms[type] = transform;\n  //       this._transformList.appendItem(transform);\n  //     } else {\n  //       transform = svgTransforms[type];\n  //     }\n  //     transformFn = (type in SVG_TRANSFORM_SHORTHANDS) ? SVG_TRANSFORM_SHORTHANDS[type] : type;\n  //     transform[transformFn].apply(transform, args);\n  //   } else {\n  //     // Microsoft still can't make a web browser that actually works, as such, Edge + IE dont implement SVG transforms properly.\n  //     // We have to force them instead... geez\n  //     this.setAttrs({\"transform\": type + \"(\" + args.join(\", \") + \")\"});\n  //   }\n  // }\n\n  /**\n    * @desc set attributes on this element\n    * @param {Object} attrs - element attributes\n  */\n  setAttrs(attrs) {\n    for (var attr in attrs) {\n      var name = (attr in SVG_ATTRIBUTE_SHORTHANDS) ? SVG_ATTRIBUTE_SHORTHANDS[attr] : attr;\n      this.el.setAttribute(name, attrs[attr]);\n    }\n  }\n\n  setGradient(attr, gradient) {\n    var attrs = {};\n    attrs[attr] = gradient.getUrl();\n    gradient._refs[attr] = this;\n    this.gradient = gradient;\n    this.setAttrs(attrs);\n  }\n}\n\n\nclass svgGradient {\n  /**\n    * @constructor svg gradient wrapper\n    * @param {svgRoot} root - svgRoot object\n    * @param {String} type - gradient type (linear | radial)\n    * @param {Object} stops - gradient stops = {color, opacity} keyed by offset value\n  */\n  constructor(root, type, stops) {\n    var stopElements = [];\n    var gradient = root._defs.insert(type + GRADIENT_SUFFIX, {\n      id: \"iro\" + GRADIENT_SUFFIX + (GRADIENT_INDEX++)\n    });\n    for (var offset in stops) {\n      var stop = stops[offset];\n      stopElements.push(gradient.insert(\"stop\", {\n        offset: offset + \"%\",\n        stopColor: stop.color,\n        stopOpacity: stop.opacity === undefined ? 1 : stop.opacity,\n      }));\n    }\n    this.el = gradient.el;\n    this.stops = stopElements;\n    this._refs = {};\n  }\n\n  getUrl(base) {\n    var root = IS_SAFARI ? (base || window.location.href) : \"\";\n    return \"url(\" + root + \"#\" + this.el.id + \")\";\n  }\n}\n\nexport default class svgRoot extends svgElement {\n  /**\n    * @constructor svg root element (inherits svgElement)\n    * @param {svgElement | Element} parent - parent node \n    * @param {Number} width - svg width\n    * @param {Number} height - svg height\n  */\n  constructor(parent, width, height, display) {\n    super(null, parent, \"svg\", {\n      width, \n      height, \n      viewBox: `0 0 ${ width } ${ height }`,\n      style: `display:${ display || \"block\" }; touch-action:none;`,\n    });\n    this._root = this;\n    this._defs = this.insert(\"defs\");\n    this._gradients = [];\n  }\n\n  gradient(type, stops) {\n    var gradient = new svgGradient(this, type, stops);\n    this._gradients.push(gradient);\n    return gradient;\n  }\n\n  updateUrls(base) {\n    if (IS_SAFARI) {\n      var gradients = this._gradients;\n      for (var i = 0; i < gradients.length; i++) {\n        for (var key in gradients[i]._refs) {\n          var attrs = {};\n          attrs[key] = gradients[i].getUrl(base);\n          gradients[i]._refs[key].setAttrs(attrs);\n        }\n      }\n    }\n  }\n}","\nexport default class stylesheet {\n  /**\n    @constructor stylesheet writer\n  */\n  constructor() {\n    // Create a new style element\n    let style = document.createElement(\"style\");\n    document.head.appendChild(style);\n    // Webkit apparently requires a text node to be inserted into the style element\n    // (according to https://davidwalsh.name/add-rules-stylesheets)\n    style.appendChild(document.createTextNode(\"\"));\n    this.style = style;\n    // Create a reference to the style element's CSSStyleSheet object\n    // CSSStyleSheet API: https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleSheet\n    let sheet = style.sheet;\n    this.sheet = sheet;\n    // Get a reference to the sheet's CSSRuleList object\n    // CSSRuleList API: https://developer.mozilla.org/en-US/docs/Web/API/CSSRuleList\n    this.rules = sheet.rules || sheet.cssRules;\n    // We'll store references to all the CSSStyleDeclaration objects that we change here, keyed by the CSS selector they belong to\n    // CSSStyleDeclaration API: https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration\n    this.map = {};\n  }\n\n  get enabled() {\n    return !this.sheet.disabled;\n  }\n\n  set enabled(value) {\n    this.sheet.disabled = !value;\n  }\n\n  // TODO: consider removing cssText + css properties since i don't tink they're that useful\n  get cssText() {\n    var map = this.map;\n    var ret = [];\n    for (var selector in map) {\n      ret.push(selector.replace(/,\\W/g, \",\\n\") + \" {\\n\\t\" + map[selector].cssText.replace(/;\\W/g, \";\\n\\t\") + \"\\n}\");\n    }\n    return ret.join(\"\\n\");\n  }\n  \n  get css() {\n    var map = this.map;\n    var ret = {};\n    for (var selector in map) {\n      var ruleSet = map[selector];\n      ret[selector] = {};\n      for (var i = 0; i < ruleSet.length; i++) {\n        var property = ruleSet[i];\n        ret[selector][property] = ruleSet.getPropertyValue(property);\n      }\n    }\n    return ret;\n  }\n\n  /**\n    * @desc Set a specific rule for a given selector\n    * @param {String} selector - the CSS selector for this rule (e.g. \"body\", \".class\", \"#id\")\n    * @param {String} property - the CSS property to set (e.g. \"background-color\", \"font-family\", \"z-index\")\n    * @param {String} value    - the new value for the rule (e.g. \"rgb(255, 255, 255)\", \"Helvetica\", \"99\")\n  */\n  setRule(selector, property, value) {\n    var sheet = this.sheet;\n    var rules = sheet.rules || sheet.cssRules;\n    var map = this.map;\n    // Convert property from camelCase to snake-case\n    property = property.replace(/([A-Z])/g, function($1) {\n      return \"-\" + $1.toLowerCase();\n    });\n    if (!map.hasOwnProperty(selector)) {\n      // If the selector hasn't been used yet we want to insert the rule at the end of the CSSRuleList, so we use its length as the index value\n      var index = rules.length;\n      // Prepare the rule declaration text, since both insertRule and addRule take this format\n      var declaration = property + \": \" + value;\n      // Insert the new rule into the stylesheet\n      try {\n        // Some browsers only support insertRule, others only support addRule, so we have to use both\n        sheet.insertRule(selector + \" {\" + declaration + \";}\", index);\n      } catch(e) {\n        sheet.addRule(selector, declaration, index);\n      } finally {\n        // Because safari is perhaps the worst browser in all of history, we have to remind it to keep the sheet rules up-to-date\n        rules = sheet.rules || sheet.cssRules;\n        // Add our newly inserted rule's CSSStyleDeclaration object to the internal map\n        map[selector] = rules[index].style;\n      }\n    }\n    else {\n      map[selector].setProperty(property, value);\n    }\n  }\n}","import wheel from \"ui/wheel\";\nimport slider from \"ui/slider\";\nimport svg from \"util/svg\";\nimport iroColor from \"modules/color\";\nimport iroStyleSheet from \"modules/stylesheet\";\n\nimport { whenReady } from \"util/dom\";\n\nexport default class colorPicker {\n  /**\n    * @constructor color wheel object\n    * @param {Element | String} el - a DOM element or the CSS selector for a DOM element to use as a container for the UI\n    * @param {Object} opts - options for this instance\n  */\n  constructor(el, opts) {\n    opts = opts || {};\n    // event storage for `on` and `off`\n    this._events = {};\n    this._mouseTarget = false;\n    this._colorChangeActive = false;\n    this.css = opts.css || opts.styles || undefined;\n    // Wait for the document to be ready, then mount the UI\n    whenReady(() => {this._mount(el, opts)});\n  }\n  /**\n    * @desc mount the color picker UI into the DOM\n    * @param {Element | String} el - a DOM element or the CSS selector for a DOM element to use as a container for the UI\n    * @param {Object} opts - options for this instance\n    * @access protected\n  */\n  _mount(el, opts) {\n    // If `el` is a string, use it to select an Element, else assume it's an element\n    el = (\"string\" == typeof el) ? document.querySelector(el) : el;\n    // Find the width and height for the UI\n    // If not defined in the options, try the HTML width + height attributes of the wrapper, else default to 320\n    var width = opts.width || parseInt(el.width) || 320;\n    var height = opts.height || parseInt(el.height) || 320;\n    // Calculate layout variables\n    var padding = opts.padding + 2 || 6,\n        borderWidth = opts.borderWidth || 0,\n        markerRadius = opts.markerRadius || 8,\n        sliderMargin = opts.sliderMargin || 24,\n        sliderHeight = opts.sliderHeight || markerRadius * 2 + padding * 2 + borderWidth * 2,\n        bodyWidth = Math.min(height - sliderHeight - sliderMargin, width),\n        wheelRadius = bodyWidth / 2 - borderWidth,\n        leftMargin = (width - bodyWidth) / 2;\n    var marker = {\n      r: markerRadius\n    };\n    var borderStyles = {\n      w: borderWidth,\n      color: opts.borderColor || \"#fff\",\n    };\n\n    // Create UI elements\n    this.el = el;\n    this.svg = new svg(el, width, height, opts.display);\n    this.ui = [\n      new wheel(this, {\n        x: leftMargin,\n        y: 0,\n        r: wheelRadius,\n        padding: padding,\n        marker: marker,\n        border: borderStyles,\n        lightness: opts.wheelLightness == undefined ? true : opts.wheelLightness,\n        anticlockwise: opts.anticlockwise\n      }),\n      new slider(this, {\n        sliderType: \"v\",\n        x: leftMargin + borderWidth,\n        y: bodyWidth + sliderMargin,\n        w: bodyWidth - borderWidth * 2,\n        h: sliderHeight - borderWidth * 2,\n        r: sliderHeight / 2 - borderWidth,\n        padding: padding,\n        marker: marker,\n        border: borderStyles\n      })\n    ];\n    // Create an iroStyleSheet for this colorWheel's CSS overrides\n    this.stylesheet = new iroStyleSheet();\n    // Create an iroColor to store this colorWheel's selected color\n    this.color = new iroColor();\n    // Whenever the selected color changes, trigger a colorWheel update too\n    this.color._onChange = this._update.bind(this);\n    this.color.set(opts.color || opts.defaultValue || \"#fff\")\n    // Hacky workaround for a couple of Safari SVG url bugs\n    // See https://github.com/jaames/iro.js/issues/18\n    // TODO: perhaps make this a seperate plugin, it's hacky and takes up more space than I'm happy with\n    this.on(\"history:stateChange\", (base) => {this.svg.updateUrls(base)});\n    this.emit(\"mount\", this);\n  }\n\n  /**\n    * @desc update the selected color\n    * @param {Object} color - an iroColor object with the new color value\n    * @param {Object} changes - booleans for each HSV channel: true if the new value is different to the old value, else false\n    * @access protected\n  */\n  _update(color, changes) {\n    var rgb = color.rgbString;\n    var css = this.css;\n    // Loop through each UI element and update it\n    for (var i = 0; i < this.ui.length; i++) {\n      this.ui[i].update(color, changes); \n    }\n    // Update the stylesheet too\n    for (var selector in css) {\n      var properties = css[selector];\n      for (var prop in properties) {\n        this.stylesheet.setRule(selector, prop, rgb);\n      }\n    } \n    // Prevent infinite loops if the color is set inside a `color:change` callback\n    if (!this._colorChangeActive) {\n      // While _colorChangeActive = true, this event cannot be fired\n      this._colorChangeActive = true;\n      this.emit(\"color:change\", color, changes);\n      this._colorChangeActive = false;\n    }\n  }\n\n  /**\n    * @desc Set a callback function for an event\n    * @param {String} eventType Name of the event to listen to, pass \"*\" to listen to all events\n    * @param {Function} callback Event callback\n  */\n  on(eventType, callback) {\n    var events = this._events;\n    (events[eventType] || (events[eventType] = [])).push(callback);\n  }\n\n  /**\n    * @desc Remove a callback function for an event added with on()\n    * @param {String} eventType The name of the event\n    * @param {Function} callback The watch callback to remove from the event\n  */\n  off(eventType, callback) {\n    var eventList = this._events[eventType];\n    if (eventList) eventList.splice(eventList.indexOf(callback), 1);\n  }\n\n  /**\n    * @desc Emit an event\n    * @param {String} eventType The name of the event to emit\n    * @param {Array} args array of args to pass to callbacks\n  */\n  emit(eventType, ...args) {\n    var events = this._events,\n        callbackList = (events[eventType] || []).concat((events[\"*\"] || []));\n    for (var i = 0; i < callbackList.length; i++) {\n      callbackList[i].apply(null, args); \n    }\n  }\n\n  // /**\n  //   * @desc DOM event handler\n  //   * @param {Event} e DOM event (currently either mouse or touch events)\n  // */\n  // handleEvent(e) {\n  //   // Detect if the event is a touch event by checking if it has the `touches` property\n  //   // If it is a touch event, use the first touch input\n  //   var point = e.touches ? e.changedTouches[0] : e,\n  //       // Get the screen position of the UI\n  //       rect = this.svg.el.getBoundingClientRect(),\n  //       // Convert the screen-space pointer position to local-space\n  //       x = point.clientX - rect.left,\n  //       y = point.clientY - rect.top;\n        \n  //   switch (e.type) {\n  //     case EVENT_MOUSEDOWN:\n  //     case EVENT_TOUCHSTART:\n  //       // Loop through each UI element and check if the point \"hits\" it\n  //       for (var i = 0; i < this.ui.length; i++) {\n  //         var uiElement = this.ui[i];\n  //         // If the element is hit, this means the user has clicked the element and is trying to interact with it\n  //         if (uiElement.checkHit(x, y)) {\n  //           // Set an internal reference to the uiElement being interacted with, for other internal event handlers\n  //           this._mouseTarget = uiElement;\n  //           // Attach event listeners\n  //           listen(document, [EVENT_MOUSEMOVE, EVENT_TOUCHMOVE, EVENT_MOUSEUP, EVENT_TOUCHEND], this, { passive:false });\n  //           // Emit input start event\n  //           this.emit(\"input:start\", this.color);\n  //           // Finally, use the position to update the picked color\n  //           this.color.hsv = this._mouseTarget.input(x, y);\n  //         }\n  //       }\n  //       break;\n  //     case EVENT_MOUSEMOVE:\n  //     case EVENT_TOUCHMOVE:\n  //       // Use the position to update the picker color\n  //       this.color.hsv = this._mouseTarget.input(x, y);\n  //       break;\n  //     case EVENT_MOUSEUP:\n  //     case EVENT_TOUCHEND:\n  //       this._mouseTarget = false;\n  //       this.emit(\"input:end\", this.color);\n  //       unlisten(document, [EVENT_MOUSEMOVE, EVENT_TOUCHMOVE, EVENT_MOUSEUP, EVENT_TOUCHEND], this);\n  //       break;\n  //   }\n  //   if (this._mouseTarget) {\n  //     e.preventDefault();\n  //   }\n  // }\n}","import colorPicker from \"modules/colorPicker\";\nimport color from \"modules/color\";\nimport stylesheet from \"modules/stylesheet\";\n\nexport default {\n  Color: color,\n  ColorPicker: colorPicker,\n  Stylesheet: stylesheet,\n  version: process.env.VERSION,\n};\n"],"names":["const","EVENT_READYSTATE_CHANGE","READYSTATE_COMPLETE","listen","el","eventList","callback","params","i","length","addEventListener","unlisten","removeEventListener","component","constructor","parent","attrs","root","svg","this","handleEvent","e","preventDefault","hsv","point","touches","changedTouches","x","clientX","y","clientY","rect","getBoundingClientRect","type","document","input","emit","color","marker","opts","baseGroup","circle","r","CLASS_PREFIX","g","move","setAttrs","PI","Math","sqrt","abs","round","wheel","class","_opts","border","borderWidth","w","cY","cX","fill","stroke","strokeWidth","ringGroup","hue","arc","anticlockwise","setGradient","gradient","opacity","_lightness","update","changes","v","lightness","toFixed","h","s","hueAngle","dist","rMax","cos","sin","rangeMax","width","height","console","log","left","top","angle","atan2","min","floor","parseColorStr","str","maxValues","parsed","match","val1","parseInt","val2","val3","parseFloat","undefined","getColor","value","clamp","max","compareObjs","a","b","key","_onChange","_value","set","mix","color1","color2","weight","rgb1","rgb","rgb2","lighten","amount","col","darken","hsv2Rgb","f","p","q","t","rgb2Hsv","delta","hsv2Hsl","l","hsl2Hsv","hsl","hsl2Str","rgb2Str","rgb2Hex","toString","padStart","parseHexStr","hex","replace","int","isShorthand","bitLength","bitMask","multiplier","parseHslStr","parseRgbStr","prototypeAccessors","newValue","oldValue","channel","hasOwnProperty","rgbString","hexString","hslString","test","setChannel","model","clone","compare","slider","range","sliderType","radius","insert","rx","ry","_gradient","iroColor","stops","stopColor","percent","GRADIENT_INDEX","SVG_ATTRIBUTE_SHORTHANDS","offset","stopOpacity","ua","window","navigator","userAgent","toLowerCase","IS_SAFARI","svgElement","createElementNS","appendChild","_root","cx","cy","startAngle","endAngle","largeArcFlag","x1","d","y1","x2","y2","join","attr","name","setAttribute","getUrl","_refs","svgGradient","stopElements","_defs","stop","push","base","location","href","id","svgRoot","display","viewBox","style","_gradients","updateUrls","gradients","stylesheet","createElement","head","createTextNode","sheet","rules","cssRules","map","enabled","disabled","cssText","ret","selector","css","ruleSet","property","getPropertyValue","setRule","$1","setProperty","index","declaration","insertRule","addRule","colorPicker","_events","_mouseTarget","_colorChangeActive","styles","_mount","readyState","stateChange","querySelector","padding","markerRadius","sliderMargin","sliderHeight","bodyWidth","borderStyles","borderColor","ui","leftMargin","wheelRadius","wheelLightness","iroStyleSheet","_update","bind","defaultValue","on","properties","prop","eventType","events","off","splice","indexOf","concat","callbackList","apply","args","Color","ColorPicker","Stylesheet","version","process"],"mappings":"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"}